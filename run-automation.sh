#!/bin/bash

# 🤖 SECURE-FLOW-AUTOMATON MASTER LAUNCHER
# Complete automation from scratch - just run this script!

set -e

echo "🚀 SECURE-FLOW-AUTOMATON MASTER AUTOMATION"
echo "=========================================="
echo "🤖 Starting complete automation from scratch..."
echo ""

# Function to print colored output
print_status() {
    echo -e "\e[32m✅ $1\e[0m"
}

print_error() {
    echo -e "\e[31m❌ $1\e[0m"
}

print_info() {
    echo -e "\e[34mℹ️  $1\e[0m"
}

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    print_error "package.json not found. Please run this from the project root."
    exit 1
fi

print_info "Phase 1: Environment Setup"
echo "----------------------------"

# Install dependencies
print_info "Installing dependencies..."
npm ci
print_status "Dependencies installed"

# Run the auto-setup script
print_info "Running automated setup..."
node scripts/auto-setup.js
print_status "Automated setup completed"

print_info "Phase 2: Validation & Testing"
echo "------------------------------"

# Run all tests
print_info "Running comprehensive tests..."
npm test
print_status "All tests passed"

# Build project
print_info "Building project..."
npm run build
print_status "Build successful"

# Security and quality checks
print_info "Running security scans..."
npm run lint:security
print_status "Security scans completed"

print_info "Phase 3: Git Operations"
echo "-----------------------"

# Check git status
if [ -n "$(git status --porcelain)" ]; then
    print_info "Changes detected, committing..."
    
    git add .
    git commit -m "🤖 MASTER AUTOMATION COMPLETE - $(date -u +%Y-%m-%dT%H:%M:%SZ)

    ✅ Full automation setup completed
    ✅ All tests passing
    ✅ Build successful
    ✅ Security validated
    ✅ Ready for production deployment
    
    Generated by: Master Automation Launcher"
    
    git push origin main
    print_status "Changes committed and pushed"
else
    print_info "No changes to commit"
fi

print_info "Phase 4: Continuous Monitoring Setup"
echo "------------------------------------"

# Create monitoring script if it doesn't exist
if [ ! -f "monitor.sh" ]; then
    cat > monitor.sh << 'EOF'
#!/bin/bash

echo "🔄 Starting continuous monitoring..."

while true; do
    echo "🔍 $(date): Checking project health..."
    
    # Pull latest changes
    git pull origin main
    
    # Quick health check
    if npm test > /dev/null 2>&1; then
        echo "✅ Health check passed"
    else
        echo "❌ Health check failed - manual intervention needed"
    fi
    
    # Wait 5 minutes
    sleep 300
done
EOF
    chmod +x monitor.sh
fi

print_status "Monitoring script ready"

echo ""
echo "🎉 MASTER AUTOMATION COMPLETED SUCCESSFULLY!"
echo "============================================"
echo ""
echo "📊 AUTOMATION SUMMARY:"
echo "✅ Environment setup complete"
echo "✅ Dependencies installed and updated"
echo "✅ All tests passing"
echo "✅ Build successful"
echo "✅ Security scans completed"
echo "✅ Changes committed to Git"
echo "✅ GitHub Actions triggered"
echo "✅ Monitoring scripts ready"
echo ""
echo "🚀 WHAT'S RUNNING AUTOMATICALLY:"
echo "• GitHub Actions workflows (triggered on every push)"
echo "• Security scans (daily schedule)"
echo "• Dependency monitoring (automated)"
echo "• Build and deployment pipeline"
echo ""
echo "📱 NEXT ACTIONS:"
echo "• Check GitHub Actions tab for workflow status"
echo "• Run 'npm run auto:monitor' for continuous monitoring"
echo "• Run 'npm run auto:status' to check automation status"
echo ""
echo "📄 Files generated:"
echo "• automation.log (detailed logs)"
echo "• AUTOMATION_REPORT.md (summary report)"
echo "• monitor.sh (continuous monitoring)"
echo ""
echo "🎯 Project is now fully automated and production-ready!"
echo ""
