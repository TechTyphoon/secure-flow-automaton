# Enhanced nginx configuration with comprehensive security hardening
# Optimized for SecureFlow Automaton production deployment

# Security: Run as non-root user
user nginx;

# Performance: Auto-detect number of worker processes
worker_processes auto;

# Security: Enhanced error logging with security events
error_log /var/log/nginx/error.log warn;

# Security: Hide nginx version and server tokens
server_tokens off;

# Performance: Optimize worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Security: Hide nginx version in error pages
    server_tokens off;
    
    # Performance: MIME types and encoding
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Security: Enhanced logging format with security information
    log_format security_combined '$remote_addr - $remote_user [$time_local] '
                                '"$request" $status $bytes_sent '
                                '"$http_referer" "$http_user_agent" '
                                'rt=$request_time uct="$upstream_connect_time" '
                                'uht="$upstream_header_time" urt="$upstream_response_time" '
                                'sid=$request_id';

    # Performance: Optimized access logging
    access_log /var/log/nginx/access.log security_combined buffer=16k flush=2m;

    # Performance: Enable efficient file serving
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Security: Timeout configurations to prevent slow DoS attacks
    keepalive_timeout 65;
    keepalive_requests 100;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Security: Limit request sizes to prevent buffer overflow attacks
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Performance: Enable gzip compression with security considerations
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Security: Disable gzip for potentially sensitive responses
    gzip_disable "msie6";

    # Security: Rate limiting zones for different types of requests
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/m;
    
    # Security: Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Performance: Enable caching for static assets
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1y;
        application/javascript     1y;
        application/woff2          1y;
        ~image/                    1y;
        application/pdf            1y;
        ~font/                     1y;
    }

    # Security: Comprehensive security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=(), fullscreen=(self), display-capture=(), web-share=()" always;
    
    # Security: Content Security Policy (CSP)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://js.stripe.com https://apis.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://*.supabase.co wss://*.supabase.co https://api.github.com https://sonarcloud.io; frame-src 'none'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests;" always;
    
    # Security: HTTP Strict Transport Security (HSTS)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Security: Additional security headers
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-site" always;

    # Server block for the application
    server {
        # Listen on port 8080 (non-privileged)
        listen 8080;
        listen [::]:8080;
        
        # Server configuration
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security: Hide server information
        server_tokens off;

        # Security: Apply rate limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # Performance: Set expires headers
        expires $expires;

        # Security: Deny access to hidden files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Deny access to sensitive files
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Performance & Security: Static assets with long caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
            
            # Security: CORS headers for fonts
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
            }
        }

        # API routes with enhanced security
        location /api/ {
            # Security: Strict rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            # Security: Additional headers for API endpoints
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # For now, return 404 as API endpoints are handled by Supabase
            return 404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Security: Handle authentication routes with strict rate limiting
        location /auth {
            limit_req zone=login burst=3 nodelay;
            try_files $uri $uri/ /index.html;
        }

        # Main application - SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security: No caching for HTML files
            location ~* \.html$ {
                expires epoch;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }
        }

        # Security: Custom error pages to avoid information disclosure
        error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;
        
        location = /error.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Security: Additional location blocks for common attack vectors
        location ~* (wp-config|wp-admin|xmlrpc) {
            deny all;
            access_log off;
            log_not_found off;
            return 444;
        }
    }
}
