# Multi-stage Dockerfile for SecureFlow Automaton
# Optimized for cross-platform compatibility and fast builds

# Stage 1: Base image for Node.js
FROM node:20-alpine AS base

# Install system dependencies for cross-platform compatibility
RUN apk add --no-cache \
    git \
    curl \
    bash \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY .nvmrc ./

# Stage 2: Dependencies installation
FROM base AS deps

# Copy package files and install dependencies
RUN npm ci --only=production --ignore-scripts && \
    npm cache clean --force

# Stage 3: Development dependencies
FROM base AS dev-deps

# Install all dependencies (including dev)
RUN npm ci --ignore-scripts && \
    npm cache clean --force

# Stage 4: Build stage
FROM dev-deps AS builder

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Stage 5: Development image
FROM base AS development

# Copy all dependencies
COPY --from=dev-deps /app/node_modules ./node_modules

# Copy source code
COPY . .

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Change ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080 || exit 1

# Start development server
CMD ["npm", "run", "dev"]

# Stage 6: Production image (lightweight)
FROM nginx:alpine AS production

# Install Node.js for SSR if needed
RUN apk add --no-cache nodejs npm

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Health check for production
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost || exit 1

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
