apiVersion: apps/v1
kind: Deployment
metadata:
  name: secureflow-automaton
  namespace: secureflow-automaton
  labels:
    app.kubernetes.io/name: secureflow-automaton
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: "4.1.0"
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: secureflow-automaton
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: secureflow-automaton
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: "4.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: secureflow-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: secureflow-automaton
        image: secureflow-automaton:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        env:
        # ConfigMap references
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: secureflow-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: secureflow-config
              key: PORT
        - name: SECURITY_LEVEL
          valueFrom:
            configMapKeyRef:
              name: secureflow-config
              key: SECURITY_LEVEL
        # Secret references
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secureflow-secrets
              key: DB_PASSWORD
        - name: SONAR_TOKEN
          valueFrom:
            secretKeyRef:
              name: secureflow-secrets
              key: SONAR_TOKEN
        - name: SNYK_TOKEN
          valueFrom:
            secretKeyRef:
              name: secureflow-secrets
              key: SNYK_TOKEN
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: secureflow-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: tmp-volume
        persistentVolumeClaim:
          claimName: secureflow-automaton-temp
      - name: cache-volume
        persistentVolumeClaim:
          claimName: secureflow-automaton-cache
      - name: logs-volume
        persistentVolumeClaim:
          claimName: secureflow-automaton-logs
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - secureflow-automaton
              topologyKey: kubernetes.io/hostname
