name: Production Security Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM

env:
  NODE_VERSION: '20'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage || npm run test
    
    - name: Lint code
      run: npm run lint
    
    - name: Security lint
      run: npm run lint:security
    
    - name: NPM Audit
      run: npm audit --audit-level=moderate --json > npm-audit-results.json || true
    
    - name: Build for production
      run: npm run build
    
    - name: Upload Security Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          npm-audit-results.json
          eslint-results.json
    
  deploy:
    name: Deploy to Production
    needs: security-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build:prod
    
    - name: Upload Production Build
      uses: actions/upload-artifact@v4
      with:
        name: production-build
        path: dist/
    
    - name: Deploy notification
      run: |
        echo "âœ… Production build completed successfully"
        echo "ðŸ“¦ Build artifacts uploaded"
        echo "ðŸš€ Ready for deployment"
