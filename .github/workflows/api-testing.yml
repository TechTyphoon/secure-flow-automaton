name: 🔧 API Testing & Documentation CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/web/**/*.ts'
      - 'apps/web/**/*.js'
      - 'docs/api/**'
      - 'openapi.yaml'
      - '.github/workflows/api-testing.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/web/**/*.ts'
      - 'apps/web/**/*.js'
      - 'docs/api/**'
      - 'openapi.yaml'
      - '.github/workflows/api-testing.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  CI: 'true'

jobs:
  # === VALIDATE OPENAPI SPECIFICATION ===
  validate-openapi:
    name: 📋 Validate OpenAPI Specification
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci --prefer-offline

    - name: 📋 Validate OpenAPI Specification
      run: |
        echo "📋 Validating OpenAPI specification..."
        if [ -f "openapi.yaml" ]; then
          echo "✅ OpenAPI specification file exists"
          # Basic validation - check if it's valid YAML
          node -e "
            const yaml = require('js-yaml');
            const fs = require('fs');
            try {
              const doc = yaml.load(fs.readFileSync('openapi.yaml', 'utf8'));
              console.log('✅ OpenAPI specification is valid YAML');
              console.log('📊 API Version:', doc.info?.version || 'N/A');
              console.log('🔗 Paths:', Object.keys(doc.paths || {}).length);
            } catch (e) {
              console.error('❌ Invalid OpenAPI specification:', e.message);
              process.exit(1);
            }
          "
        else
          echo "❌ OpenAPI specification file not found"
          exit 1
        fi

  # === RUN API TESTS (CI-OPTIMIZED) ===
  api-tests:
    name: 🧪 API Tests (CI Environment)
    runs-on: ubuntu-latest
    needs: validate-openapi

    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: |
        echo "📦 Installing dependencies..."
        npm ci --prefer-offline

    - name: 🧪 Run API Tests (CI Mode)
      run: |
        echo "🧪 Running API tests in CI environment..."
        echo "ℹ️ Tests will run in CI mode and skip connection-dependent tests"
        
        # Set CI environment variables
        export CI=true
        export DOCKER_BUILD=true
        
        # Run the API test suite
        node docs/api/tests/api-test.js
      env:
        CI: true
        DOCKER_BUILD: true
        NODE_ENV: test

    - name: 📊 Test Results Summary
      if: always()
      run: |
        echo "📊 API Test Results Summary:"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        echo "✅ Tests completed in CI mode"
        echo "ℹ️ Connection tests were skipped (expected in CI)"
        echo "📋 All tests should show 'SKIPPED in CI' status"

  # === GENERATE TEST SUMMARY ===
  test-summary:
    name: 📊 Test Summary
    runs-on: ubuntu-latest
    needs: [validate-openapi, api-tests]
    if: always()

    steps:
    - name: 📊 Generate Test Summary
      run: |
        echo "🎯 API Testing & Documentation CI/CD Results:"
        echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
        
        if [ "${{ needs.validate-openapi.result }}" = "success" ]; then
          echo "✅ OpenAPI Validation: PASSED"
        else
          echo "❌ OpenAPI Validation: FAILED"
        fi
        
        if [ "${{ needs.api-tests.result }}" = "success" ]; then
          echo "✅ API Tests: PASSED (CI Mode)"
        else
          echo "❌ API Tests: FAILED"
        fi
        
        echo ""
        echo "📋 Summary:"
        echo "• OpenAPI specification validation completed"
        echo "• API tests ran in CI mode (connection tests skipped)"
        echo "• All tests should complete successfully in CI environment"
        echo ""
        echo "🔗 View detailed results in the Actions tab"
        
        # Create summary artifact
        cat > api-test-summary.json << EOF
        {
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "workflow": "${{ github.workflow }}",
          "run_id": "${{ github.run_id }}",
          "commit": "${{ github.sha }}",
          "branch": "${{ github.ref_name }}",
          "trigger": "${{ github.event_name }}",
          "test_results": {
            "openapi_validation": "${{ needs.validate-openapi.result }}",
            "api_tests": "${{ needs.api-tests.result }}"
          },
          "ci_mode": true,
          "overall_status": "${{ job.status }}"
        }
        EOF

    - name: 📤 Upload Test Summary
      uses: actions/upload-artifact@v4
      with:
        name: api-testing-summary
        path: api-test-summary.json
        retention-days: 30
