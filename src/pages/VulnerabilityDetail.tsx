
import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { Card, CardHeader, CardContent, CardTitle } from '@/components/ui/card';

const VulnerabilityDetail: React.FC = () => {
  const { cveId } = useParams<{ cveId: string }>();
  const [data, setData] = useState<any>(null);

  useEffect(() => {
    setTimeout(() => {
      setData({
        cve: cveId,
        title: "SQL Injection in Authentication",
        severity: "Critical",
        description: "This SQLi allows attackers to execute arbitrary SQL due to directly concatenated input in 'auth.js'.",
        file: "/src/routes/auth.js",
        line: 17,
        component: "express-session",
        remediation: "Use parameterized queries in SQL statements.",
        references: [
          "https://cwe.mitre.org/data/definitions/89.html",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=" + cveId
        ],
        codeSnippet: "db.query(`SELECT * FROM users WHERE user='${user}'`);"
      });
    }, 600);
  }, [cveId]);

  if (!data) return <div className="p-10">Loading vulnerability details...</div>;
  return (
    <div className="max-w-2xl mx-auto py-10">
      <Card>
        <CardHeader>
          <CardTitle>
            {data.cve}: {data.title}
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          <div><span className="font-medium">Severity:</span> <span className="text-security-critical">{data.severity}</span></div>
          <div><span className="font-medium">Location:</span> {data.file}:{data.line}</div>
          <div><span className="font-medium">Component:</span> {data.component}</div>
          <div><span className="font-medium">Description:</span> {data.description}</div>
          <div>
            <span className="font-medium">Remediation:</span> {data.remediation}
          </div>
          <div>
            <span className="font-medium">References:</span>
            <ul className="list-disc pl-5 text-xs text-blue-700">
              {data.references.map((ref: string) => (
                <li key={ref}><a href={ref} target="_blank" rel="noopener noreferrer">{ref}</a></li>
              ))}
            </ul>
          </div>
          <div>
            <span className="font-medium">Code Snippet:</span>
            <pre className="bg-muted rounded p-2 text-xs mt-2">{data.codeSnippet}</pre>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default VulnerabilityDetail;
