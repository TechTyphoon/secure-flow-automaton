
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { 
  AlertTriangle, 
  Shield, 
  Zap, 
  Clock,
  ChevronRight,
  ExternalLink
} from 'lucide-react';

const VulnerabilityDashboard = () => {
  const vulnerabilities = [
    {
      id: 'CVE-2024-1234',
      title: 'SQL Injection in user authentication',
      severity: 'critical',
      component: 'auth-service',
      status: 'auto-fixing',
      timeToFix: '2 min',
      confidence: 95
    },
    {
      id: 'CVE-2024-5678',
      title: 'Outdated dependency with known exploits',
      severity: 'high',
      component: 'payment-service',
      status: 'fixed',
      timeToFix: 'Complete',
      confidence: 100
    },
    {
      id: 'CVE-2024-9012',
      title: 'Insecure direct object reference',
      severity: 'medium',
      component: 'user-service',
      status: 'analyzing',
      timeToFix: '5 min',
      confidence: 78
    },
    {
      id: 'CVE-2024-3456',
      title: 'Missing security headers',
      severity: 'low',
      component: 'web-frontend',
      status: 'queued',
      timeToFix: '1 min',
      confidence: 99
    }
  ];

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return 'bg-security-critical text-white';
      case 'high': return 'bg-security-high text-white';
      case 'medium': return 'bg-security-medium text-white';
      case 'low': return 'bg-security-low text-white';
      default: return 'bg-muted text-muted-foreground';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'auto-fixing': return <Zap className="h-4 w-4 text-security-scanning animate-pulse-security" />;
      case 'fixed': return <Shield className="h-4 w-4 text-security-secure" />;
      case 'analyzing': return <Clock className="h-4 w-4 text-security-medium" />;
      default: return <AlertTriangle className="h-4 w-4 text-muted-foreground" />;
    }
  };

  return (
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <Card className="glass-morphism">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <AlertTriangle className="h-5 w-5 text-security-critical" />
            <span>Active Vulnerabilities</span>
            <Badge variant="secondary" className="ml-2">7 total</Badge>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {vulnerabilities.map((vuln, index) => (
              <div key={index} className="flex items-center justify-between p-3 rounded-lg border border-border hover:bg-white/5 transition-colors">
                <div className="flex-1">
                  <div className="flex items-center space-x-3 mb-2">
                    <Badge className={getSeverityColor(vuln.severity)}>
                      {vuln.severity.toUpperCase()}
                    </Badge>
                    <span className="text-sm font-medium text-foreground">{vuln.id}</span>
                    {getStatusIcon(vuln.status)}
                  </div>
                  <h4 className="font-medium text-foreground mb-1">{vuln.title}</h4>
                  <div className="flex items-center space-x-4 text-xs text-muted-foreground">
                    <span>Component: {vuln.component}</span>
                    <span>Fix Time: {vuln.timeToFix}</span>
                    <span>Confidence: {vuln.confidence}%</span>
                  </div>
                </div>
                <Button variant="ghost" size="icon">
                  <ChevronRight className="h-4 w-4" />
                </Button>
              </div>
            ))}
          </div>
          
          <div className="mt-6 pt-4 border-t border-border">
            <Button className="w-full security-gradient hover:opacity-90 transition-opacity">
              <ExternalLink className="h-4 w-4 mr-2" />
              View Full Security Report
            </Button>
          </div>
        </CardContent>
      </Card>

      <Card className="glass-morphism">
        <CardHeader>
          <CardTitle className="flex items-center space-x-2">
            <Zap className="h-5 w-5 text-security-scanning" />
            <span>Auto-Remediation Status</span>
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h4 className="font-medium text-foreground">Automated Fixes Available</h4>
                <p className="text-sm text-muted-foreground">5 vulnerabilities can be auto-fixed</p>
              </div>
              <Button size="sm" className="security-gradient">
                Fix All
              </Button>
            </div>
            
            <div className="space-y-3">
              <div className="flex justify-between text-sm">
                <span className="text-muted-foreground">Success Rate</span>
                <span className="text-security-secure font-medium">94%</span>
              </div>
              <div className="w-full bg-muted rounded-full h-2">
                <div className="security-gradient h-2 rounded-full" style={{ width: '94%' }}></div>
              </div>
            </div>
            
            <div className="grid grid-cols-2 gap-4 pt-4">
              <div className="text-center">
                <div className="text-2xl font-bold text-security-secure">156</div>
                <div className="text-xs text-muted-foreground">Fixed This Week</div>
              </div>
              <div className="text-center">
                <div className="text-2xl font-bold text-security-scanning">4.2m</div>
                <div className="text-xs text-muted-foreground">Avg Fix Time</div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default VulnerabilityDashboard;
